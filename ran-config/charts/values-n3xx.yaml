kubernetesType: Vanilla  #Vanilla for community kubernetes distribution

nfimage:   # image name either locally present or in a public/private repository
  repository: @GNB_N3XX_REPO@
  version: @GNB_N3XX_TAG@ 
  pullPolicy: IfNotPresent # IfNotPresent or Never or Always

# good to use when pulling images from docker-hub mention 
imagePullSecrets: 
 - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-gnb-sa"

#service type is fixed to clusterIP, it is only support for non multus interface (eth0)

# These helm-charts can be used for two purpose
# 1. RFSimulated oai-gNB: Only requires 1 interface for N2 and N3. You can use Kubernetes default interface eth0
# 2. Physical gNB with Ethernet based USRP or RRU: You need to use ruInterface to connect with RU. Make sure that the ip-address you choose can reach to RU. 
#                                                 Using a dedicated interface for N2 or N3 is optional you can still use eth0. 
# 3. Another thing you can chose to use same virtual interface for N2/N3 its optional to have two different

## NOTE: To use these charts with USRP B210 you need to modify and mount usb from the host. 
## Change these ip-addresses according to your environment
# Multus interface name

multus:    # needed when gnB service will run on another interface rather than traditional eth0
  n2n3Interface:
    create: false
    IPadd: "172.21.6.203"
    Netmask: "22"
    hostInterface: "bond0"
  sfp1Interface:
    create: false
    IPadd: "192.168.10.132" # .10.129 for our USRP N300 and .10.130 for our N320
    Netmask: "24"
    mtu: 9000
    hostInterface: "eth2"
  sfp2Interface:
    create: false
    IPadd: "192.168.20.132" #	.20.129 for our USRP N300 and .20.130 for our N320
    Netmask: "24"
    mtu: 9000
    hostInterface: "eth3"

config:
  mountConfig: true #If config file is mounted then please edit mount.conf in configmap.yaml properly 
  useSATddMono: true
  timeZone: "Europe/Paris"
  rfSimulator: "server"
  useSATddMono: "yes"
  gnbName: "gnb-n3xx"
  mcc: "001"   # check the information with AMF, SMF, UPF/SPGWU
  mnc: "01"    # check the information with AMF, SMF, UPF/SPGWU
  mncLength: "2" # check the information with AMF, SMF, UPF/SPGWU
  tac: "1"     # check the information with AMF
  nssaiSst: "1"  #currently only 4 standard values are allowed 1,2,3,4 
  nssaiSd0: "ffffff"    #values in hexa-decimal format
  amfIpAddress: "oai-amf-svc"  # amf ip-address or service-name oai-amf-svc
  gnbNgaIfName: "eth0"            # net1 in case multus create is true that means another interface is created for ngap interface, n2 to communicate with amf
  gnbNgaIpAddress: "status.podIP" # n2n3IPadd in case multus create is true
  gnbNguIfName: "eth0"   #net1 in case multus create is true gtu interface for upf/spgwu
  gnbNguIpAddress: "status.podIP" # n2n3IPadd in case multus create is true
  useAdditionalOptions: "--sa -E --rfsim --log_config.global_log_options level,nocolor,time"
  threadParallelConfig: "PARALLEL_SINGLE_THREAD"
  sdrAddrs: "serial=XXXXXXX"

## Debugging section
start:
  gnb: true
  tcpdump: false

includeTcpDumpContainer: false #If true it will add a tcpdump container inside network function pod for debugging

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

tcpdumpimage:
  repository: docker.io/corfr/tcpdump
  version: latest
  pullPolicy: IfNotPresent # IfNotPresent or Never or Always


# gNB needs two seperate interface one for ngap (N2) and other one for gtpu (N3) 
# But for experimentation only one interface can be used. 
# When you need multus:
# 1. you want seperate interface for N2 and N3 
# 2. You want static ip-address for N2 and N3 interface
# 3. Different interfaces for different packets


persistent:
  sharedvolume: false
  volumeName: oai5g-volume
  size: 1Gi

resources:
  define: true
  limits:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi
  requests:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi


tolerations: []

affinity: {}

terminationGracePeriodSeconds: 5

nodeSelector: {}

nodeName: 

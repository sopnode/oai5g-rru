#!/usr/bin/python3

# Script to configure APN and mode of Quectel devices
# requires PySerial package


import time
import sys
import serial
import argparse

try:
    phone = serial.Serial("/dev/ttyUSB2",  460800, timeout=5)
except:
    print("Device /dev/ttyUSB2 not found, is Quectel device on ?")
    sys.exit()

def send_msg(command, delay):
    """
    send command to Quectel, wait for delay and print msg
    """
    
    ret = []
    phone.write(f"{command}".encode())
    print(f"send command {command}")
    time.sleep(delay)
    while phone.inWaiting()>0:
        msg=phone.readline()
        msg=msg.decode("utf-8")
        msg=msg.replace("\r","")
        msg=msg.replace("\n","")
        if msg!="":
           ret.append(msg)
    print(ret)
    return True



def main():
    """
    CLI frontend
    """
    
try:
    delay=0.1
    parser = argparse.ArgumentParser()
    parser.add_argument('--dnn', dest='dnn', type=str, help='Change default oai.ipv4 APN',
                        default="oai.ipv4")
    parser.add_argument('--mode', dest='mode', type=str, choices=["mbim","qmi"],
                        help='Set mode to either mbim or qmi',
                        default='mbim')
    args = parser.parse_args()

    print(f"*** Running config-ue with DNN {args.dnn}, {args.mode} mode")

    print("Check current APN")
    send_msg("AT+CGDCONT?\r", delay)
    print(f"Set new APN with DNN {args.dnn}")
    command=f"AT+CGDCONT=1,\"IP\",\"{args.dnn}\"\r"
    send_msg(command, delay)
    send_msg("AT+CGDCONT=2\r", delay)
    send_msg("AT+CGDCONT=3\r", delay)
    print("Check new APN")
    send_msg("AT+CGDCONT?\r", delay)
    print("Check 4G/5G mode")
    send_msg("at+qnwprefcfg=\"mode_pref\"\r", delay)
    print("Check LTE bands")
    send_msg("at+qnwprefcfg=\"lte_band\"\r", delay)
    print("Check NR 5G bands")
    send_msg("at+qnwprefcfg=\"nr5g_band\"\r", delay)
    print("Check current MBIM/QMI mode")
    send_msg("at+qcfg=\"usbnet\"\r", delay)
    if args.mode == "mbim":
        print(f"Set MBIM mode")
        send_msg("at+qcfg=\"usbnet\",2\r", delay)
    else:
        print(f"Set QMI mode")
        send_msg("at+qcfg=\"usbnet\",0\r", delay)
    send_msg("AT+CFUN=1,1", delay)

finally:
    phone.close()

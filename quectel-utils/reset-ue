#!/usr/bin/python3

# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
#   Required Python Version
#     Python 3.x
#
#---------------------------------------------------------------------

# Script to send commands to Quectel
# requires PySerial package


import time
import sys
import serial

try:
    phone = serial.Serial("/dev/ttyUSB2",  460800, timeout=5)
except:
    print("Device /dev/ttyUSB2 not found, is Quectel device on ?")
    sys.exit()


def send_msg(command, delay):
    """
    send command to Quectel, wait for delay and print msg
    """
    
    ret = []
    phone.write(f"{command}".encode())
    time.sleep(delay)
    while phone.inWaiting()>0:
        print(f"waiting for command {command}")
        msg=phone.readline()
        msg=msg.decode("utf-8")
        msg=msg.replace("\r","")
        msg=msg.replace("\n","")
        print(msg)
        if msg!="":
           ret.append(msg)
        else:
           print("msg empty")
    print(ret)
    return True



def main():
    """
    CLI frontend
    """

try:
    send_msg("AT+CFUN=0\r", 0.1)

finally:
    phone.close()

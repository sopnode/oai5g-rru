# Default values for oai-gnb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

nfimage:   # image name either locally present or in a public/private repository
  registry: local
  repository: docker.io/r2labuser/oai-gnb           ## dockerhub oaisoftwarealliance/oai-gnb  
  version: latest # image tag
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

tcpdumpimage:
  registry: local
  repository: docker.io/corfr/tcpdump
  version: latest
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

## good to use when pulling images from docker-hub mention 
imagePullSecrets: 
  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-gnb-sa"

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  s1uPort: 2152
  s1cPort: 36412
  x2cPort: 36422 

start:
  gnb: true
  tcpdump: false

# gNB needs two seperate interface one for ngap (N2) and other one for gtpu (N3) 
# But for experimentation only one interface can be used. 
# When you need multus:
# 1. you want seperate interface for N2 and N3 
# 2. You want static ip-address for N2 and N3 interface
# 3. Different interfaces for different packets
 
multus:    # needed when gnB service will run on another interface rather than traditional eth0
  create: true
  n2IPadd: "192.168.100.163"
  n2Netmask: "24"
  hostInterface: "team0" # Interface of the node (sopnode-w2) on which this pod will be scheduled for N2 and N3
  n3IPadd: "192.168.100.164"
  n3Netmask: "24"
  sfp1IPadd: "192.168.10.132" # .10.129 for our USRP N300 and .10.130 for our N320
  sfp1Netmask: "26"
  sfp1hostInterface: "eth2"
  sfp2IPadd: "192.168.20.132" #	.20.129 for our USRP N300 and .20.130 for our N320
  sfp2Netmask: "26"
  sfp2hostInterface: "eth3"

config:
  timeZone: "Europe/Paris"
  rfSimulator: "server" 
  useSATddMono: "yes"
  gnbName: "gnb-rfsim"
  mcc: "208"   # check the information with AMF, SMF, UPF/SPGWU
  mnc: "95"    # check the information with AMF, SMF, UPF/SPGWU
  mncLength: "2" # check the information with AMF, SMF, UPF/SPGWU
  tac: "1"     # check the information with AMF
  nssaiSst: "1"  #currently only 4 standard values are allowed 1,2,3,4 
  nssaiSd0: "1"    #values in hexa-decimal format
  nssaiSd1: "10203"
  useFqdn: "false"
  amfFqdn: "oai-amf-svc"
  amfIpAddress: "192.168.100.161"  # amf ip-address or service-name
  gnbNgaIfName: "net1"  # net1 in case multus create is true that means another interface is created for ngap interface, n2 to communicate with amf
  gnbNgaIpAddress: "192.168.100.163" # n2IPadd in case multus create is true
  gnbNguIfName: "net2"   #net2 in case multus create is true gtu interface for upf/spgwu
  gnbNguIpAddress: "192.168.100.164" # n3IPadd in case multus create is true
  useAdditionalOptions: "--sa --usrp-tx-thread-config 1 --tune-offset 30000000 --thread-pool 1,3,5,7,9,11,13,15"
#  useAdditionalOptions: '--usrp-args "type=n3xx,mgmt_addr=192.168.3.151,addr=192.168.10.129,second_addr=192.168.20.129"'

persistence:
  sharedvolume: false
  volumeName: managed-nfs-storage
  size: 1Gi

resources:
  define: false
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
   cpu: 100m
   memory: 256Mi


tolerations: []

affinity: {}

terminationGracePeriodSeconds: 30

nodeSelector: {}

nodeName: sopnode-w2.inria.fr
